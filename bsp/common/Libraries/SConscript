from building import *
import rtconfig

STM32_TYPE = eval(BuildOptions['STM32_USING_TYPE'])
cwd = GetCurrentDir()
includes = [
    cwd,
    cwd + '/CMSIS/CM3/CoreSupport',
    cwd + '/CMSIS/CM3/DeviceSupport/ST/STM32F10x',
    cwd + '/STM32F10x_StdPeriph_Driver/inc', 
]

# Start-up code for each STM32 type
startup_scripts = {
    'STM32F10X_CL'      : 'startup_stm32f10x_cl.s',
    'STM32F10X_HD'      : 'startup_stm32f10x_hd.s',
    'STM32F10X_HD_VL'   : 'startup_stm32f10x_hd_vl.s',
    'STM32F10X_LD'      : 'startup_stm32f10x_ld.s',
    'STM32F10X_LD_VL'   : 'startup_stm32f10x_ld_vl.s',
    'STM32F10X_MD'      : 'startup_stm32f10x_md.s',
    'STM32F10X_MD_VL'   : 'startup_stm32f10x_md_vl.s',
    'STM32F10X_XL'      : 'startup_stm32f10x_xl.s',
}
if rtconfig.CROSS_TOOL == 'gcc':
    path = 'CMSIS/CM3/DeviceSupport/ST/STM32F10x/startup/gcc_ride7/'
elif rtconfig.CROSS_TOOL == 'keil':
    path = 'CMSIS/CM3/DeviceSupport/ST/STM32F10x/startup/arm/'
elif rtconfig.CROSS_TOOL == 'iar':
    path = 'CMSIS/CM3/DeviceSupport/ST/STM32F10x/startup/iar/'
sources = [path + startup_scripts[STM32_TYPE]]

# STM32 drivers
sources.extend(Split("""
    CMSIS/CM3/CoreSupport/core_cm3.c
    CMSIS/CM3/DeviceSupport/ST/STM32F10x/system_stm32f10x.c
    STM32F10x_StdPeriph_Driver/src/stm32f10x_crc.c
    STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c
    STM32F10x_StdPeriph_Driver/src/stm32f10x_wwdg.c
    STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c
    STM32F10x_StdPeriph_Driver/src/stm32f10x_exti.c
    STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c
    STM32F10x_StdPeriph_Driver/src/stm32f10x_i2c.c
    STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c
    STM32F10x_StdPeriph_Driver/src/stm32f10x_dac.c
    STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c
    STM32F10x_StdPeriph_Driver/src/stm32f10x_fsmc.c
    STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c
    STM32F10x_StdPeriph_Driver/src/stm32f10x_iwdg.c
    STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c
    STM32F10x_StdPeriph_Driver/src/stm32f10x_flash.c
    STM32F10x_StdPeriph_Driver/src/stm32f10x_sdio.c
    STM32F10x_StdPeriph_Driver/src/stm32f10x_gpio.c
    STM32F10x_StdPeriph_Driver/src/stm32f10x_usart.c
    STM32F10x_StdPeriph_Driver/src/stm32f10x_dbgmcu.c
    STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c
    STM32F10x_StdPeriph_Driver/src/stm32f10x_can.c
    STM32F10x_StdPeriph_Driver/src/stm32f10x_cec.c
    STM32F10x_StdPeriph_Driver/src/misc.c
"""))

switch = 'STM32_USING_STD_DRV'
objs = DefineGroup('STM32_STD_DRV', src=sources, depend=switch, CPPPATH=includes, 
                   CCFLAGS=' -D USE_STDPERIPH_DRIVER -D '+STM32_TYPE)

Return('objs')
